---
import BaseLayout from "./BaseLayout.astro";
import BlogPostJSONLD from "../components/BlogPostJSONLD.astro";
import FormattedDate from "../components/FormattedDate";
import { Section } from "@/components/ui/section";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Asterisk, ExternalLink } from "lucide-react";
import SubscribeButton from "@/components/SubscribeButton.astro";
import { getReadingTime } from "../utils/getReadingTime";
import TableOfContents from "../components/TableOfContents";
import PostList from "@/components/PostList";
import { getCollection } from "astro:content";

const { post } = Astro.props;
const readingTime = getReadingTime(post.body);
const { title, description, pubDate, updatedDate, tags } = post.data;
const posts = (await getCollection("blog"))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .filter((post) => post.data.tags.some((tag) => tags.includes(tag)))
  .filter((post) => post.data.title !== title)
  .filter((post) => post.data.draft !== true)
  .filter((_, index) => index < 3);
---

<style is:global>
  /* Remove default quote marks from blockquotes */
  .prose blockquote p::before,
  .prose blockquote p::after {
    content: none !important;
  }
</style>

<BaseLayout {...post.data} image={`/blog/${post.slug}/og-image.png`}>
  <BlogPostJSONLD slot="head" {...post.data} />
  <Section variant="dark" className="pt-[60px]">
    <div
      class="container mx-auto grid grid-cols-1 lg:grid-cols-[1fr_65ch_1fr] gap-2"
    >
      <div class="lg:col-start-2">
        <article
          class="mx-auto
              prose
              dark:prose-invert
              prose-h1:mb-2
              prose-h1:font-medium
              prose-h2:font-normal
              prose-h3:font-normal
              prose-h4:font-normal
              prose-h2:my-6
              prose-h3:my-4
              prose-h4:my-2
              prose-p:my-2
              prose-pre:font-code
              prose-pre:rounded-none
              prose-blockquote:bg-primary/50
              prose-blockquote:border-none
              prose-blockquote:rounded-lg
              prose-blockquote:py-4
              prose-blockquote:not-italic
              prose-blockquote:transition-all
              hover:prose-blockquote:bg-secondary/50
              prose-img:w-full
              px-2"
        >
          <header class="border-b-[1px] border-solid pb-2">
            <h1 class="lead text-balance">{title}</h1>
            {description && <h2 class="m-0">{description}</h2>}
            <div class="flex flex-row items-baseline gap-6 text-sm uppercase">
              <div>
                {pubDate && <FormattedDate date={pubDate} />}
                {
                  updatedDate && (
                    <div>
                      Last updated on <FormattedDate date={updatedDate} />
                    </div>
                  )
                }
              </div>
              <span class="flex gap-2">
                {
                  tags
                    .sort((a: string, b: string): any => a.localeCompare(b))
                    .map((tag: any): any => (
                      <Badge variant="secondary">
                        <a href={`/tags/${tag}`} class="no-underline">
                          {tag}
                        </a>
                      </Badge>
                    ))
                }
              </span>
              <div class="ms-auto text-muted">
                {readingTime}
              </div>
            </div>
          </header>
          <slot />
          <div
            class="flex flex-col md:flex-row gap-6 md:gap-12 justify-between py-24 border-t"
          >
            <div class="w-full">
              <SubscribeButton />
            </div>
            <div class="flex items-center justify-center text-muted">or</div>
            <a
              href="https://github.com/jakubsob/r-tests-gallery/issues/new/choose"
              target="_blank"
              class="flex items-center gap-2 no-underline w-full"
              rel="noopener noreferrer"
            >
              <Button variant="pill" className="flex-1 font-light h-auto">
                <ExternalLink className="size-[1em]" />
                <div>Submit a content request</div>
              </Button>
            </a>
          </div>
        </article>
      </div>
      <div class="relative">
        <TableOfContents client:load />
      </div>
    </div>
  </Section>
  <Section variant="light">
    <div class="container mx-auto grid grid-cols-1 gap-2 max-w-[65ch]">
      <div class="py-24">
        <h2 class="text-3xl mb-6 flex items-center uppercase">
          <Asterisk className="size-[1em] block" />
          <span>You might also like</span>
        </h2>
        <PostList posts={posts} showControls={false} />
      </div>
    </div>
  </Section>
  <script is:inline>
    const headings = Array.from(document.querySelectorAll("h2, h3, h4"));
    headings.forEach((heading) => {
      if (!heading.id) {
        heading.id = heading.textContent
          .toLowerCase()
          .replace(/[^\w\s]/g, "")
          .replace(/\s+/g, "-");
      }
    });
  </script>
</BaseLayout>
