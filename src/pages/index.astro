---
import BaseHead from "../components/BaseHead.astro";
import PostList from "../components/PostList.astro";
import Header from "../components/Header.jsx";
import HeaderLink from "../components/HeaderLink.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { getCollection } from "astro:content";
import { getTagsWithCounts } from "../utils/getTagsWithCounts";
import Tag from "../components/Tag.astro";
import Search from "../components/Search";

const posts = (await getCollection("blog"))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .filter((post) => post.data.draft !== true);
const tags = getTagsWithCounts(posts).sort((a, b) => b.count - a.count);
---

<!doctype html>
<html lang="en">
  <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  <style>
    html {
      scroll-behavior: smooth;
      scroll-snap-type: y proximity;
    }

    section {
      scroll-snap-align: start;
    }

    .wavy {
      padding-bottom: clamp(1rem, 2vw, 2rem);
      background: url("wave.svg");
      background-repeat: repeat;
      background-position-x: 0%;
      background-position-y: 0%;
      background-size: auto auto;
      background-repeat: repeat-x;
      background-size: 20px 100%;
      background-position: 0px 0px;
      animation: move 10s linear infinite;
      -webkit-animation: move 20s linear infinite;
      animation-play-state: running;
      text-decoration: none;
    }

    .wave {
      fill: var(--color-marine);
    }

    #test {
      filter: brightness(0.8);
    }

    @-webkit-keyframes move {
      from {
        background-position: 0px 2rem;
      }
      to {
        background-position: 200px 2rem;
      }
    }

    @keyframes move {
      from {
        background-position: 2px 19px;
      }
      to {
        background-position: 200px 19px;
      }
    }
  </style>
  <main class="relative">
    <Header client:only="react">
      <HeaderLink href="#hero">jakub::sobolewski</HeaderLink>
      <HeaderLink href="#blog">blog</HeaderLink>
      <HeaderLink
        class="ms-auto"
        href="https://www.linkedin.com/in/jakub-sobolewski-r/"
      >
        <span class="iconify logos--linkedin-icon"></span>
      </HeaderLink>
      <HeaderLink href="https://www.github.com/jakubsob/">
        <span class="iconify logos--github-icon"></span>
      </HeaderLink>
    </Header>
    <section
      id="hero"
      class="bg-sky h-[100vh]
        relative
        overflow-hidden
        text-white
        grid
        items-center justify-items-start
        grid-cols-1 grid-rows-1
        lg:grid-cols-1 lg:grid-rows-1
        p-4"
      style="
        z-index: 0;
        opacity: 1;
        mix-blend-mode: overlay;
        background-image: url(cover.svg);
        background-position: 0 0;
        background-repeat: no-repeat;
        background-size: cover;
        background-attachment: scroll;
        inset: 0%;"
    >
      <div
        class="absolute bottom-0 left-0 -translate-x-1/3
    rotate-30
    h-[clamp(200px,20vw,500px)] w-[clamp(200px,100vw,500px)]
    bg-[#77C0CA] opacity-10
    rounded-full border-none blur-[400px]"
      >
      </div>
      <div
        class="absolute top-0 right-0 translate-x-1/2
  rotate-3 5
  h-[clamp(200px,10vw,500px)] w-[clamp(200px,50vw,500px)]
  bg-[#77C0CA] opacity-20
  rounded-full border-none blur-[400px]"
      >
      </div>
      <div
        class="self-center justify-self-center
lg:self-center lg:justify-self-center lg:col-span-2"
      >
        <h3 class="text-gray-200 mb-5 font-light relative">
          <img
            id="test"
            src="test.svg"
            class="absolute z-[-1] left-[40ch] top-0 h-[clamp(200px,50vw,400px)]"
          />
          Hi, my name is <span class="text-white font-semibold"
            >Jakub Sobolewski</span
          > and this is
        </h3>
        <h1 class="text-clamp font-code text-white mb-5 relative">
          Building quality by
          <span class="text-marine wavy">testing</span>
        </h1>
        <h3 class="text-gray-200 font-light mb-12">
          <p>Iâ€™m a software engineer specialising in R.</p>
          <p>I teach and preach using testing to develop code efficiently.</p>
        </h3>
        <div class="flex gap-4">
          <button
            class="outline outline-marine outline-1
            rounded-lg
            text-marine font-code tracking-[0.35rem] font-bold text-clamp-md uppercase
            py-3 px-6
            transition-all duration-400 ease
            hover:text-white
            hover:outline-2
            hover:outline-white
            hover:shadow-[0px_0px_12px_-2px_#77C0CA]"
          >
            <a href="https://jakubsobolewski.substack.com/subscribe"
              >Subscribe</a
            >
          </button>
          <button
            class="py-3 px-6
            outline outline-0
            rounded-lg
            transition-all duration-600 ease-in-out
            text-gray-400 font-code tracking-[0.35rem] font-bold text-clamp-md uppercase
            hover:text-gray-400
            hover:shadow-[0px_0px_5px_-1px_#77C0CA]"
          >
            <a href="#blog"> Read </a>
          </button>
        </div>
      </div>
    </section>
    <section
      id="testimonials"
      class="h-[50vh]
    p-4
    bg-marine-200
    flex items-center justify-center"
    >
      <div class="rounded-lg p-10 bg-white shadow-md">
        <div class="text-xl mb-5">
          <img src="fa_quote-left.svg" class="py-2 opacity-10" />
          <span>
            [...] many <span class="font-bold">thought provoking posts</span> that
            he has on his blog [...]
          </span>
        </div>
        <p class="text-md">
          Eric Nantz,
          <a
            class="text-marine-700"
            href="https://serve.podhome.fm/episodepage/r-weekly-highlights/issue-2024-w43-highlights"
          >
            R Weekly Podcast, Issue 2024-W43
          </a>
        </p>
      </div>
    </section>
    <section
      id="blog"
      class="grid
        grid-cols-1
        grid-rows-[1fr_auto]
        bg-marine-50
        lg:grid-cols-[1fr_minmax(65ch,_1fr)_1fr]
        lg:grid-rows-1
        pt-16"
      style="
    z-index: 0;
    opacity: 1;
    mix-blend-mode: overlay;
    background-image: url(noise-sky.svg);
    background-position: 0 0;
    background-repeat: repeat-y;
    background-size: contain;
    background-attachment: scroll;
    inset: 0%;"
    >
      <article
        class="col-start-1 max-w-[65ch] mx-auto order-1
  lg:col-start-2 lg:row-start-1 lg:order-1"
      >
        <section>
          <PostList posts={posts} />
        </section>
      </article>
      <article class="col-start-1 order-1 max-w-[65ch] lg:max-w-full mx-auto">
        <div class="sticky top-16">
          <h1>There are {posts.length} posts on</h1>
          <div class="flex flex-row flex-wrap gap-1
          lg:max-w-[300px]">
            {
              tags.map((tag) => {
                return <Tag href={tag.tag} label={`${tag.tag} ${tag.count}`} />;
              })
            }
          </div>
          <div class="mt-4 lg:max-w-[300px]">
            <Search client:load searchList={posts} />
          </div>
        </div>
      </article>
      <article
        class="col-start-1 order-2 mx-auto
        lg:col-start-3 lg:row-start-1 lg:order-2"
      >
        <div class="sticky top-16">
          <h1>Check out</h1>
          <ul>
            <li>
              <a href="https://rweekly.org/">R-Weekly</a>
            </li>
            <li>
              <a href="https://www.r-bloggers.com">R-Bloggers</a>
            </li>
          </ul>
        </div>
      </article>
    </section>
  </main>
  <script
    is:inline
    src="https://cdn.jsdelivr.net/npm/motion@11.11.13/dist/motion.js"></script>
  <script is:inline>
    const { animate, scroll } = Motion;
    document.querySelectorAll("#test").forEach((item) => {
      scroll(animate(item, { y: 50 }, { ease: "linear" }), {
        target: item,
      });
    });
  </script>
  <script is:inline>
    window.addEventListener("load", () => {
      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            const header = document.querySelector("#header");
            if (entry.isIntersecting) {
              header.style.color = "var(--color-marine-100)";
            } else {
              header.style.color = "black";
            }
          });
        },
        {
          threshold: 0.01,
        }
      );
      observer.observe(document.querySelector("#hero"));
    });
  </script>
</html>
