---
import { getCollection } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";
import PostList from "../components/PostList.jsx";
import { Code } from "astro:components";
import { Picture } from "astro:assets";
import { Button } from "@/components/ui/button";
import { Section } from "@/components/ui/section";
import { Animate } from "@/components/ui/animate";
import FeatureList from "@/components/FeatureList.astro";
import { ArrowDownLeft, Asterisk, ArrowDown } from "lucide-react";
import authorImage from "/public/author.png";

const posts = (await getCollection("blog"))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .filter((post) => post.data.draft !== true)
  .filter((_, index) => index < 3);
---

<BaseLayout>
  <style>
    .letter-hover {
      transition: all 0.3s ease;
    }
    .letter-hover-green {
      transition: all 0.3s ease;
    }

    .letter-hover:hover {
      color: var(--color-red-500) !important;
      filter: blur(0.01em);
    }
    .letter-hover-green:hover {
      transform: scale(1.1);
      color: var(--color-ocean-green-700) !important;
    }
    .letter-hover:hover {
      color: var(--color-red-500) !important;
      transform: scale(1.1);
      filter: blur(0.01em);
    }
  </style>
  <Section variant="dark" size="full" id="hero">
    <div class="h-screen w-screen relative overflow-hidden">
      <button
        class="cursor-button fixed z-10 size-36 rounded-full bg-ocean-green-300 uppercase text-xl backdrop-blur-lg hidden md:visible"
        id="cursor-button"
      >
        Read blog
      </button>
      <div
        id="circle"
        class="absolute z-0 top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-gradient-to-b from-background to-ocean-green-700 opacity-20 size-[70vw] md:size-[70vh] rounded-full"
      >
      </div>
      <div
        id="circle"
        class="absolute z-0 top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-gradient-to-b from-background to-ocean-green-700 opacity-30 size-[100vw] md:size-[100vh] rounded-full"
      >
      </div>
      <div
        class="absolute z-0 top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2"
      >
        <h1
          class="text-[clamp(6em,7vw,12em)] uppercase font-light leading-[0.8em] space-y-3 bg-blend-multiply relative"
          id="hero-h1"
        >
          <a href="/blog">
            <Animate variant="header">
              <span class="tracking-[0.05em] flex items-center">
                <Asterisk
                  className="letter-hover inline-block size-[1em] text-red-500 stroke-1"
                />
                <span class="letter-hover">B</span>
                <span class="letter-hover">u</span>
                <span class="letter-hover">i</span>
                <span class="letter-hover">l</span>
                <span class="letter-hover">d</span>
                <span class="letter-hover">i</span>
                <span class="letter-hover">n</span>
                <span class="letter-hover">g</span>
              </span>
            </Animate>
            <Animate variant="header" className="motion-delay-[200ms]">
              <span
                class="text-ocean-green-500 dark:text-ocean-green-200 tracking-[0.1em] flex items-center"
              >
                <span class="letter-hover-green">q</span>
                <span class="letter-hover-green">u</span>
                <span class="letter-hover-green">a</span>
                <span class="letter-hover-green">l</span>
                <span class="letter-hover-green">i</span>
                <span class="letter-hover-green">t</span>
                <span class="letter-hover-green">y</span>
                <ArrowDownLeft
                  className="letter-hover-green inline-block size-[1.5em] stroke-1"
                />
              </span>
            </Animate>
            <Animate variant="header" className="motion-delay-[400ms]">
              <span class="text-nowrap flex items-center tracking-[0.03em]">
                <span class="letter-hover">b</span>
                <span class="letter-hover">y</span>
                <span class="letter-hover">&nbsp;</span>
                <span class="letter-hover">t</span>
                <span class="letter-hover">e</span>
                <span class="letter-hover">s</span>
                <span class="letter-hover">t</span>
                <span class="letter-hover">i</span>
                <span class="letter-hover">n</span>
                <span class="letter-hover">g</span>
              </span>
            </Animate>
          </a>
        </h1>
        <div
          class="visible absolute -bottom-10 left-1/2 -translate-x-1/2 translate-y-full md:max-w-[400px] flex gap-2"
        >
          <Animate variant="expand" className="motion-delay-[600ms]">
            <Button variant="destructive" className="w-full">
              <a href="/blog"> Read blog </a>
            </Button>
          </Animate>
          <Animate variant="expand" className="motion-delay-[600ms]">
            <Button variant="secondary" className="bg-card border w-full">
              <a href="/course"> Sign up for the course </a>
            </Button>
          </Animate>
        </div>
      </div>
    </div>
    <Animate variant="header" className="motion-delay-[1000ms]">
      <a
        href="#blog"
        class="cursor-pointer text-destructive/50 motion-preset-oscillate border-destructive/50 absolute bottom-0 left-1/2 -translate-x-1/2 size-8 mb-2 rounded-full border-2"
      >
        <ArrowDown className="block size-full" />
      </a>
    </Animate>
  </Section>
  <Section id="blog" size="fit" variant="light">
    <div class="py-40 space-y-52">
      <div class="container grid grid-cols-1 lg:grid-cols-2">
        <div class="mb-12">
          <Animate>
            <h2 class="flex text-6xl uppercase">New on the blog</h2>
          </Animate>
        </div>
        <div class="order-3 mt-12 md:order-2 md:self-end">
          <Animate>
            <a href="/blog">
              <Button variant="pill" size="xl"> Read more â†’</Button>
            </a>
          </Animate>
        </div>
        <div class="h-full max-w-[65ch] row-span-2">
          <PostList client:load posts={posts} showControls={false} />
        </div>
      </div>
    </div>
  </Section>
  <Section id="opensource" size="fit" variant="dark">
    <div class="container mx-auto flex justify-center pt-52 pb-12">
      <Animate>
        <h2 class="text-clamp-md font-light uppercase flex items-center">
          <Asterisk className="inline-block size-[1em] text-red-500 mr-4" />
          <span>My Open Source</span>
          <Asterisk className="inline-block size-[1em] text-red-500 mr-4" />
        </h2>
      </Animate>
    </div>
    <div class="rounded-lg py-20 mx-2 md:mx-10 my-10 space-y-52">
      <div class="container grid grid-cols-1 lg:grid-cols-[1fr_1fr] gap-12">
        <div>
          <Animate>
            <a
              href="https://github.com/jakubsob/cucumber"
              class="hover:underline"
            >
              <h3 class="text-clamp-sm uppercase mb-12 flex items-center gap-4">
                <div class="size-[100px] flex-shrink-0">
                  <img
                    class="w-full h-full object-contain"
                    src="https://raw.githubusercontent.com/jakubsob/cucumber/main/man/figures/logo.png"
                    alt="cucumber logo"
                    width="100"
                    height="100"
                  />
                </div>
                {"Cucumber"}
              </h3>
            </a>
          </Animate>
          <Animate>
            <div class="relative">
              <div
                class="absolute -inset-4 bg-gradient-to-br from-ocean-green-500/20 to-red-500/20 rounded-lg blur-xl opacity-30 -z-10"
              >
              </div>
              <Code
                themes={{
                  light: "github-light",
                  dark: "github-dark",
                }}
                wrap={false}
                lang="gherkin"
                code={`Feature: View Sales Trends
  Scenario: User views the sales trend for a product category
    Given the user can view product sales information
    When they view the sales trend for "Electronics"
    Then they should see the sales trend plot for "Electronics"

  Scenario: User views the sales trend for a specific product
    Given the user can view product sales information
    When they view the sales trend for "Smartphone"
    Then they should see the sales trend plot for "Smartphone"`}
              />
            </div>
          </Animate>
        </div>
        <div class="space-y-8 font-light">
          <FeatureList
            items={[
              {
                title: "Human-readable tests",
                description:
                  "Write tests in plain language that stakeholders and users can understand, review, and validate.",
              },
              {
                title: "Bridge communication gaps",
                description:
                  "Enable collaboration between developers, testers, and business analysts by using a common language.",
              },
              {
                title: "Living documentation",
                description:
                  "Your tests become executable documentation that always stays up-to-date with your code.",
              },
              {
                title: "Behavior-driven development",
                description:
                  "Focus on the behavior of your software rather than its implementation details.",
              },
              {
                title: "Reusable step definitions",
                description:
                  "Create a library of reusable test steps that can be combined to create complex scenarios.",
              },
            ]}
          />
        </div>
      </div>
      <div class="container grid grid-cols-1 lg:grid-cols-[1fr_1fr] gap-12">
        <div class="order-1 md:order-2 space-y-8 font-light">
          <div>
            <Animate>
              <a
                href="https://github.com/jakubsob/muttest"
                class="hover:underline"
              >
                <h3
                  class="text-clamp-sm uppercase mb-12 flex items-center gap-4"
                >
                  <div class="size-[100px] flex-shrink-0">
                    <img
                      class="w-full h-full object-contain"
                      src="https://raw.githubusercontent.com/jakubsob/muttest/main/man/figures/logo.png"
                      alt="muttest logo"
                      width="100"
                      height="100"
                    />
                  </div>
                  {"Muttest"}
                </h3>
              </a>
            </Animate>
            <Animate>
              <div class="relative">
                <div
                  class="absolute -inset-4 bg-gradient-to-br from-red-500/20 to-ocean-green-500/20 rounded-lg blur-xl opacity-30 -z-10"
                >
                </div>
                <Code
                  themes={{
                    light: "github-light-default",
                    dark: "github-dark",
                  }}
                  lang="r"
                  code={`plan <- muttest::plan(
  mutators = list(
    muttest::operator("+", "-"),
    muttest::operator("-", "+"),
    muttest::operator("*", "/"),
    muttest::operator("/", "*"),
    muttest::operator("==", "!="),
    muttest::operator("!=", "==")
  )
)
muttest::muttest(plan)`}
                />
              </div>
            </Animate>
          </div>
        </div>
        <div class="order-1 space-y-6">
          <FeatureList
            items={[
              {
                title: "Identify test gaps",
                description:
                  "Discover weak spots in your test suite by introducing small changes to your code and checking if tests catch them.",
              },
              {
                title: "Quality over quantity",
                description:
                  "Focus on test effectiveness rather than just coverage percentages. Muttest reveals if your tests actually validate behavior.",
              },
              {
                title: "Automated mutation testing",
                description:
                  "Systematically introduce mutations to your code and run tests to measure how well they detect changes.",
              },
              {
                title: "Improve test reliability",
                description:
                  "Build more robust test suites that actually catch bugs and regressions in your R code.",
              },
              {
                title: "Confidence in refactoring",
                description:
                  "Refactor code with confidence knowing your tests will catch any breaking changes.",
              },
            ]}
          />
        </div>
      </div>
    </div>
  </Section>
  <Section id="shiny-behavior-driven-development" size="fit" variant="dark">
    <div class="flex justify-center pt-52 pb-12">
      <Animate>
        <h2
          class="text-[clamp(2em,5vw,6em)] font-light uppercase flex items-center"
        >
          <Asterisk className="inline-block size-[1em] text-red-500 mr-4" />
          <span>Tutorials</span>
          <Asterisk className="inline-block size-[1em] text-red-500 mr-4" />
        </h2>
      </Animate>
    </div>
    <div
      class="bg-gradient-to-br from-primary/5 to-primary/10 border rounded-lg py-20 mx-2 md:mx-10 my-10"
    >
      <div class="container mx-auto space-y-52">
        <div class="grid grid-cols-1 lg:grid-cols-[1fr_1fr] gap-12">
          <div class="md:order-1">
            <Animate>
              <a
                href="https://github.com/jakubsob/shiny-acceptance-tdd"
                class="hover:underline"
              >
                <h3
                  class="text-clamp-sm text-wrap uppercase mb-8 leading-[1em]"
                >
                  Shiny Acceptance Test-Driven Development
                </h3>
              </a>
            </Animate>
            <Animate>
              <Code
                themes={{
                  light: "github-light",
                  dark: "github-dark",
                }}
                lang="r"
                code={`# tests/acceptance/test-budget.R
test_that("Scenario: I can inspect my net balance", {
  # Given
  dsl$record_income(2000)
  dsl$record_expense(500)
  # When
  dsl$inspect_finances()
  # Then
  dsl$verify_total_income(2000)
  dsl$verify_total_expenses(500)
  dsl$verify_net_balance(1500)
  dsl$teardown()
})`}
              />
            </Animate>
          </div>
          <div class="space-y-8 font-light">
            <FeatureList
              items={[
                {
                  title: "Start with user stories",
                  description:
                    "Transform vague requirements into clear, testable user stories that define what users want to accomplish.",
                },
                {
                  title: "Executable specifications",
                  description:
                    "Turn user scenarios into working code that validates your application behaves as expected.",
                },
                {
                  title: "Domain-specific language",
                  description:
                    "Create a testing vocabulary that bridges technical implementation with business language.",
                },
                {
                  title: "UI independence",
                  description:
                    "Focus on behavior, not implementation details, allowing your UI to evolve without breaking tests.",
                },
                {
                  title: "Shiny best practices",
                  description:
                    "Learn practical techniques for building more maintainable, testable Shiny applications.",
                },
              ]}
            />
          </div>
        </div>
        <div class="grid grid-cols-1 lg:grid-cols-[1fr_1fr] gap-12">
          <div class="md:order-2">
            <Animate>
              <a
                href="https://jakubsobolewski.com/shinyconf2024/"
                target="_blank"
                class="hover:underline"
              >
                <h3 class="text-clamp-sm uppercase mb-8 leading-[1em]">
                  Shiny Test-Driven Development
                </h3>
              </a>
            </Animate>
            <Animate>
              <div class="aspect-video w-full overflow-hidden rounded-lg">
                <iframe
                  class="w-full h-full"
                  src="https://www.youtube.com/embed/HKMhDzLRqM0?si=8UTJjBwTpGTcmyt6"
                  title="Structured Approach to Testing Shiny Apps - ShinyConf 2024"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                  allowfullscreen
                >
                </iframe>
              </div>
            </Animate>
          </div>
          <div class="space-y-8 font-light">
            <FeatureList
              items={[
                {
                  title: "Test inside-out or outside-in",
                  description:
                    "Learn different testing strategies and when to apply them for maximum effectiveness in Shiny apps.",
                },
                {
                  title: "Automate acceptance criteria",
                  description:
                    "Convert business requirements into automated tests that validate your application meets user needs.",
                },
                {
                  title: "Isolate Shiny modules",
                  description:
                    "Test each Shiny module independently to ensure they function correctly before integration.",
                },
                {
                  title: "Inject fake dependencies",
                  description:
                    "Use dependency injection to replace external services with test doubles for faster, more reliable tests.",
                },
                {
                  title: "Structured testing approach",
                  description:
                    "Apply a systematic testing methodology that improves code quality and development speed.",
                },
              ]}
            />
          </div>
        </div>
        <div class="grid grid-cols-1 lg:grid-cols-[1fr_1fr] gap-12">
          <div class="md:order-1">
            <Animate>
              <a
                href="/assets/user2025.pdf"
                target="_blank"
                class="hover:underline"
              >
                <h3 class="text-clamp-sm uppercase mb-8 leading-[1em]">
                  Behavior-Driven Development
                </h3>
              </a>
            </Animate>
            <Animate>
              <div class="aspect-video w-full overflow-hidden rounded-lg">
                <iframe
                  class="w-full h-full"
                  src="https://www.youtube.com/embed/e4H28G2J05U?si=ru0yRV6LRHh7TmwI"
                  title="Behavior-Driven Development Tutorial"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                  allowfullscreen
                >
                </iframe>
              </div>
            </Animate>
          </div>
          <div class="space-y-8 font-light">
            <FeatureList
              items={[
                {
                  title: "Learn BDD fundamentals",
                  description:
                    "Understand the core principles of Behavior-Driven Development and why it improves software quality.",
                },
                {
                  title: "From Vague Wish to Working Code",
                  description:
                    "Cooperate with stakeholders to transform vague requirements into clear, testable scenarios.",
                },
                {
                  title: "Use Given-When-Then",
                  description:
                    "Master the Given-When-Then syntax to write scenarios that describe system behavior in a structured way.",
                },
                {
                  title: "Use Cucumber",
                  description:
                    "Execute specifications using an R implementation of Cucumber.",
                },
              ]}
            />
          </div>
        </div>
      </div>
    </div>
  </Section>
  <Section id="about" size="full" variant="light">
    <div class="py-52">
      <div class="container grid grid-cols-1 place-items lg:grid-cols-2 gap-12">
        <div class="flex flex-col gap-4">
          <Animate>
            <div class="w-48 h-48 mx-auto lg:mx-0 mb-8 lg:mb-0">
              <Picture
                src={authorImage}
                alt="Jakub Sobolewski"
                class="w-full h-full object-cover rounded-md border"
                widths={[192, 384]}
                sizes="192px"
              />
            </div>
          </Animate>
          <Animate>
            <h2
              class="text-6xl font-light uppercase mb-12 text-center lg:text-start"
            >
              I'm Jakub Sobolewski
            </h2>
          </Animate>
        </div>
        <Animate>
          <div class="max-w-[65ch] space-y-8 font-light">
            <p>
              Iâ€™m a software engineer specializing in R with 5+ years of
              experience.
            </p>
            <p>
              I believe automated testing is the key to building quality
              software.
            </p>
            <p>
              My journey into R testing began with a project where to develop
              code, you had to be connected to the production environment. Turns
              out, it was a terrible developer experience.
            </p>
            <p>
              I'm particularly passionate about knowledge sharing, which is why
              I maintain an active blog and R Tests Gallery. I believe that when
              we share our testing experiencesâ€”both successes and failuresâ€”we
              all become better developers.
            </p>
            <p>
              I approach testing with a practical mindset: tests should make
              development faster and more confident, not slower and more
              burdensome. My goal is to help teams find testing strategies that
              actually enhance their workflow.
            </p>
          </div>
        </Animate>
      </div>
    </div>
  </Section>
</BaseLayout>
